<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>share</title>
    <link href="/2020/11/13/share/"/>
    <url>/2020/11/13/share/</url>
    
    <content type="html"><![CDATA[<h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><h4 id="老友记1-10季"><a href="#老友记1-10季" class="headerlink" title="老友记1-10季"></a>老友记1-10季</h4><p>链接：<a href="https://pan.baidu.com/s/1VcaAUcpCMWJTniDd-oXa6Q">https://pan.baidu.com/s/1VcaAUcpCMWJTniDd-oXa6Q</a> </p><p>提取码：44gz </p>]]></content>
    
    
    
    <tags>
      
      <tag>share</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git</title>
    <link href="/2020/10/27/git/"/>
    <url>/2020/10/27/git/</url>
    
    <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p>切换至git仓库目录（最顶层文件目录）</p><h5 id="初始化仓库（默认进入主分支（master））"><a href="#初始化仓库（默认进入主分支（master））" class="headerlink" title="初始化仓库（默认进入主分支（master））"></a>初始化仓库（默认进入主分支（master））</h5><pre><code class="hljs shell">git init</code></pre><h5 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h5><pre><code class="hljs shell">git status</code></pre><h5 id="添加文件到仓库（临时缓存区）"><a href="#添加文件到仓库（临时缓存区）" class="headerlink" title="添加文件到仓库（临时缓存区）"></a>添加文件到仓库（临时缓存区）</h5><pre><code class="hljs shell">git add filename</code></pre><h5 id="将文件提交到仓库"><a href="#将文件提交到仓库" class="headerlink" title="将文件提交到仓库"></a>将文件提交到仓库</h5><pre><code class="hljs shell">git commit -m &quot;committext&quot;</code></pre><h5 id="添加文件并提交"><a href="#添加文件并提交" class="headerlink" title="添加文件并提交"></a>添加文件并提交</h5><pre><code class="hljs shell">git commit filename -m &quot;committext&quot;</code></pre><h5 id="提交至远程仓库"><a href="#提交至远程仓库" class="headerlink" title="提交至远程仓库"></a>提交至远程仓库</h5><pre><code class="hljs shell">git push origin/master</code></pre><h5 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h5><pre><code class="hljs shell">git log</code></pre><h5 id="查看分支情况（-代表当前分支）"><a href="#查看分支情况（-代表当前分支）" class="headerlink" title="查看分支情况（*代表当前分支）"></a>查看分支情况（*代表当前分支）</h5><pre><code class="hljs shell">git branch</code></pre><h5 id="增加分支"><a href="#增加分支" class="headerlink" title="增加分支"></a>增加分支</h5><pre><code class="hljs shell">git branch branchname</code></pre><h5 id="切换当前分支（当前尾部有提示所在行）"><a href="#切换当前分支（当前尾部有提示所在行）" class="headerlink" title="切换当前分支（当前尾部有提示所在行）"></a>切换当前分支（当前尾部有提示所在行）</h5><pre><code class="hljs shell">git checkout branchname</code></pre><h5 id="创建并切换至新分支"><a href="#创建并切换至新分支" class="headerlink" title="创建并切换至新分支"></a>创建并切换至新分支</h5><pre><code class="hljs shell">git checkout -b branchname</code></pre><h5 id="创建远程分支"><a href="#创建远程分支" class="headerlink" title="创建远程分支"></a>创建远程分支</h5><pre><code class="hljs shell">git checkout -b branchname origin/branchname</code></pre><h5 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h5><p>无冲突</p><pre><code class="hljs shell">git merge branchname</code></pre><p>存在冲突</p><pre><code class="hljs shell">解决冲突文件上面为自己新代码，下面为合并的代码git add mergefilegit commitgit push</code></pre><h5 id="删除分支（主分支不能删除）"><a href="#删除分支（主分支不能删除）" class="headerlink" title="删除分支（主分支不能删除）"></a>删除分支（主分支不能删除）</h5><pre><code class="hljs shell">git branch -d branchname</code></pre><h5 id="SSH密钥和公钥生产（-c-Users-username-ssh）id-rsa（密钥）id-rsa-pub（公钥）-公钥添加到Github"><a href="#SSH密钥和公钥生产（-c-Users-username-ssh）id-rsa（密钥）id-rsa-pub（公钥）-公钥添加到Github" class="headerlink" title="SSH密钥和公钥生产（/c/Users/username/.ssh）id_rsa（密钥）id_rsa.pub（公钥） 公钥添加到Github"></a>SSH密钥和公钥生产（/c/Users/username/.ssh）id_rsa（密钥）id_rsa.pub（公钥） 公钥添加到Github</h5><pre><code class="hljs shell">ssh-keygen.exe</code></pre><h5 id="添加公匙之后测试"><a href="#添加公匙之后测试" class="headerlink" title="添加公匙之后测试"></a>添加公匙之后测试</h5><pre><code class="hljs shell">ssh -T git@github.com</code></pre><h5 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h5><pre><code class="hljs shell">git remote add origin githubaddress</code></pre><h5 id="同步远程仓库"><a href="#同步远程仓库" class="headerlink" title="同步远程仓库"></a>同步远程仓库</h5><pre><code class="hljs shell">git pull</code></pre><h5 id="强制拉取并覆盖本地代码"><a href="#强制拉取并覆盖本地代码" class="headerlink" title="强制拉取并覆盖本地代码"></a>强制拉取并覆盖本地代码</h5><pre><code class="hljs shell">git fetch --allgit reset --hard origin/mastergit pull</code></pre><h5 id="放弃本次commit"><a href="#放弃本次commit" class="headerlink" title="放弃本次commit"></a>放弃本次commit</h5><pre><code class="hljs shell">git reset --soft HEAD^</code></pre><h5 id="隐藏本地修改"><a href="#隐藏本地修改" class="headerlink" title="隐藏本地修改"></a>隐藏本地修改</h5><pre><code class="hljs shell">git stash</code></pre><h5 id="返回本地修改"><a href="#返回本地修改" class="headerlink" title="返回本地修改"></a>返回本地修改</h5><pre><code class="hljs shell">git stash pop</code></pre>]]></content>
    
    
    <categories>
      
      <category>版本控制</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>goland</title>
    <link href="/2020/10/27/goland/"/>
    <url>/2020/10/27/goland/</url>
    
    <content type="html"><![CDATA[<h1 id="Goland"><a href="#Goland" class="headerlink" title="Goland"></a>Goland</h1><h3 id="配置Git-Bash"><a href="#配置Git-Bash" class="headerlink" title="配置Git Bash"></a>配置Git Bash</h3><p>File-&gt;Settings-&gt;Tools-&gt;Terminal-&gt;Shell path-&gt;选择Git安装目录下的bin文件下的sh.exe</p><h3 id="设置字体大小"><a href="#设置字体大小" class="headerlink" title="设置字体大小"></a>设置字体大小</h3><p>File-&gt;Settings-&gt;Editor-&gt;General-&gt;Font</p><h3 id="格式化代码"><a href="#格式化代码" class="headerlink" title="格式化代码"></a>格式化代码</h3><p>CTRL+ALT+L</p><h3 id="全局搜索"><a href="#全局搜索" class="headerlink" title="全局搜索"></a>全局搜索</h3><p>SHIFT+CTRL+F</p><h3 id="局部搜索"><a href="#局部搜索" class="headerlink" title="局部搜索"></a>局部搜索</h3><p>CTRL+F</p><h3 id="快速打开文件"><a href="#快速打开文件" class="headerlink" title="快速打开文件"></a>快速打开文件</h3><p>CTRL+SHIFT+N</p><h3 id="设置注释后空一格"><a href="#设置注释后空一格" class="headerlink" title="设置注释后空一格"></a>设置注释后空一格</h3><p>File-&gt;Settings-&gt;Editor-&gt;Code Style-&gt;Go-&gt;Other</p><p>选择 Add leading space to comments 修改右侧注释格式，然后点击Apply</p><h3 id="连接外网下载包"><a href="#连接外网下载包" class="headerlink" title="连接外网下载包"></a>连接外网下载包</h3><p>Go -&gt; Go Modules -&gt; GOPROXY=<a href="https://goproxy.cn,direct/">https://goproxy.cn,direct</a></p>]]></content>
    
    
    <categories>
      
      <category>编辑器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>goland</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>golang</title>
    <link href="/2020/10/27/golang/"/>
    <url>/2020/10/27/golang/</url>
    
    <content type="html"><![CDATA[<h1 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h1><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><p>不存在隐式类型转换，只能强制类型转换</p><p>函数或者变量：首字母大写外部可导入，小写包内使用</p><p>函数包依次导入，不一次性直接包含</p><h5 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h5><pre><code class="hljs go"><span class="hljs-keyword">var</span> arr = [...]<span class="hljs-keyword">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125; <span class="hljs-comment">// 可变数量</span><span class="hljs-keyword">for</span> _, val := <span class="hljs-keyword">range</span> arr &#123;    <span class="hljs-comment">// _ : 不读取， </span>    <span class="hljs-comment">// 遍历时不会越界</span>&#125;</code></pre><h5 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h5><p>底层 哈希表 </p><p>冲突方法 链地址法（数组加链表）</p><p>实际存储：key、value分别存储</p><p><a href="https://mp.weixin.qq.com/s/OJSxIXH87mjCkQn76eNQsQ">https://mp.weixin.qq.com/s/OJSxIXH87mjCkQn76eNQsQ</a></p><p>插入key对应的value写入对应的内存，而是返回了value应该插入的内存地址</p><p>把一个值 赋给一个地址</p><p>把一个地址 赋给一个地址</p><h5 id="String"><a href="#String" class="headerlink" title="String"></a>String</h5><pre><code class="hljs go"><span class="hljs-comment">// 字符串元素不可改，只读，支持切片</span>str := <span class="hljs-string">&quot;abcd&quot;</span> <span class="hljs-comment">// 定义之后不能修改，相当于常量 修改时必须赋值</span>str[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;b&#x27;</span> <span class="hljs-comment">// Cannot assign to str[0]</span></code></pre><h5 id="Mod"><a href="#Mod" class="headerlink" title="Mod"></a>Mod</h5><pre><code class="hljs shell">go mod init modnamego build</code></pre>]]></content>
    
    
    <categories>
      
      <category>语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mongo</title>
    <link href="/2020/10/27/mongo/"/>
    <url>/2020/10/27/mongo/</url>
    
    <content type="html"><![CDATA[<h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><p><a href="https://docs.mongodb.com/manual/tutorial/insert-documents/">https://docs.mongodb.com/manual/tutorial/insert-documents/</a></p><p>mongo 本质是按照key-value map 存储的 json</p><pre><code class="hljs go"><span class="hljs-string">&quot;go.mongodb.org/mongo-driver/mongo&quot;</span> <span class="hljs-comment">// mongo驱动</span></code></pre><h5 id="存储ma-np"><a href="#存储ma-np" class="headerlink" title="存储ma np"></a>存储ma np</h5><p>使用inc拼接（需要定义protobuf存储格式）</p><pre><code class="hljs json">&#123;    <span class="hljs-attr">&quot;school&quot;</span>: &#123;        <span class="hljs-attr">&quot;class&quot;</span>: &#123;            <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;name&quot;</span>,            <span class="hljs-attr">&quot;total&quot;</span>: <span class="hljs-number">10</span>,            <span class="hljs-attr">&quot;可变值&quot;</span>: <span class="hljs-number">1</span>        &#125;    &#125;&#125;</code></pre><p>根据map更新内容</p><pre><code class="hljs go">update.Inc(<span class="hljs-string">&quot;school.class.name, &quot;</span>name<span class="hljs-string">&quot;)</span><span class="hljs-string">update.Inc(&quot;</span>school.class.<span class="hljs-string">&quot;+strconv.Itoa(int(可变值)), 1)</span></code></pre><h5 id="读取map"><a href="#读取map" class="headerlink" title="读取map"></a>读取map</h5><pre><code class="hljs go">valMap := <span class="hljs-keyword">map</span>[<span class="hljs-keyword">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;&#123;&#125;<span class="hljs-keyword">if</span> err := db.FindOne(ctx, filter).Decode(valMap); err != <span class="hljs-literal">nil</span> &#123;  <span class="hljs-keyword">return</span> err&#125;</code></pre><p><strong>存在时更新，不存在时创建, 主键(“_id”)不能更新</strong></p><p>set : 更新值</p><p>push：向数组压入值（可重复）</p><p>addToSet：向数组压入值（不可重复）</p><p>upsert：不存在时是否更新</p><pre><code class="hljs shell">db.test.update(&#123;&quot;_id&quot;: 2&#125;, &#123;$set: &#123;item: &quot;a&quot;&#125;, $push: &#123;tags: &quot;a&quot;&#125;&#125;, &#123;upsert:true&#125;)</code></pre>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mongo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql</title>
    <link href="/2020/10/27/mysql/"/>
    <url>/2020/10/27/mysql/</url>
    
    <content type="html"><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><pre><code class="hljs go">_ <span class="hljs-string">&quot;github.com/go-sql-driver/mysql&quot;</span> <span class="hljs-comment">// mysql驱动</span></code></pre><h5 id="默认值NULL判断"><a href="#默认值NULL判断" class="headerlink" title="默认值NULL判断"></a>默认值NULL判断</h5><pre><code class="hljs go">val := sql.NullFloat64 <span class="hljs-comment">// 读取值操作</span><span class="hljs-keyword">if</span> sum.Valid &#123;<span class="hljs-comment">// 使用sum.Valid 进行判断是否为空值</span>&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>剑指offer</title>
    <link href="/2020/10/27/%E5%89%91%E6%8C%87offer/"/>
    <url>/2020/10/27/%E5%89%91%E6%8C%87offer/</url>
    
    <content type="html"><![CDATA[<h1 id="剑指-Offer"><a href="#剑指-Offer" class="headerlink" title="剑指 Offer"></a>剑指 Offer</h1><h4 id="剑指-Offer-03-数组中重复的数字"><a href="#剑指-Offer-03-数组中重复的数字" class="headerlink" title="剑指 Offer 03. 数组中重复的数字"></a><a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/">剑指 Offer 03. 数组中重复的数字</a></h4><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">findRepeatNumber</span><span class="hljs-params">(nums []<span class="hljs-keyword">int</span>)</span> <span class="hljs-title">int</span></span> &#123;    tmp := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-keyword">int</span>]<span class="hljs-keyword">bool</span>)    res := <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> _, val := <span class="hljs-keyword">range</span> nums &#123;        <span class="hljs-keyword">if</span> _, ok := tmp[val]; ok &#123;            tmp[val] = <span class="hljs-literal">true</span>        &#125; <span class="hljs-keyword">else</span> &#123;            tmp[val] = <span class="hljs-literal">false</span>        &#125;        <span class="hljs-keyword">if</span> tmp[val] == <span class="hljs-literal">true</span> &#123;            res = val            <span class="hljs-keyword">break</span>        &#125;    &#125;    <span class="hljs-keyword">return</span> res&#125;</code></pre><h4 id="剑指-Offer-04-二维数组中的查找"><a href="#剑指-Offer-04-二维数组中的查找" class="headerlink" title="剑指 Offer 04. 二维数组中的查找"></a><a href="https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/">剑指 Offer 04. 二维数组中的查找</a></h4><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">findNumberIn2DArray</span><span class="hljs-params">(matrix [][]<span class="hljs-keyword">int</span>, target <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">bool</span></span> &#123;    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(matrix) == <span class="hljs-number">0</span> || <span class="hljs-built_in">len</span>(matrix[<span class="hljs-number">0</span>]) == <span class="hljs-number">0</span> &#123;        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>    &#125;    row := <span class="hljs-number">0</span>    col := <span class="hljs-built_in">len</span>(matrix[<span class="hljs-number">0</span>]) - <span class="hljs-number">1</span> <span class="hljs-comment">// error len(matrix) - 1</span>    res := <span class="hljs-literal">false</span>    <span class="hljs-keyword">for</span> row &lt; <span class="hljs-built_in">len</span>(matrix) &amp;&amp; col &gt;= <span class="hljs-number">0</span> &#123;        <span class="hljs-keyword">if</span> matrix[row][col] &lt; target &#123;            row += <span class="hljs-number">1</span>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> matrix[row][col] &gt; target &#123;            col -= <span class="hljs-number">1</span>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> matrix[row][col] == target &#123;            res = <span class="hljs-literal">true</span>            <span class="hljs-keyword">break</span>        &#125;    &#125;    <span class="hljs-keyword">return</span> res&#125;</code></pre><h4 id="剑指-Offer-05-替换空格"><a href="#剑指-Offer-05-替换空格" class="headerlink" title="剑指 Offer 05. 替换空格"></a><a href="https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/">剑指 Offer 05. 替换空格</a></h4><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">replaceSpace</span><span class="hljs-params">(s <span class="hljs-keyword">string</span>)</span> <span class="hljs-title">string</span></span> &#123;    res := <span class="hljs-string">&quot;&quot;</span>    <span class="hljs-keyword">for</span> _, val := <span class="hljs-keyword">range</span> s &#123;        <span class="hljs-keyword">if</span> val == <span class="hljs-string">&#x27; &#x27;</span> &#123;             res += <span class="hljs-string">&quot;%20&quot;</span>        &#125; <span class="hljs-keyword">else</span> &#123;            res += <span class="hljs-keyword">string</span>(val)        &#125;    &#125;    <span class="hljs-keyword">return</span> res&#125;</code></pre><h4 id="剑指-Offer-06-从尾到头打印链表"><a href="#剑指-Offer-06-从尾到头打印链表" class="headerlink" title="剑指 Offer 06. 从尾到头打印链表"></a><a href="https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/">剑指 Offer 06. 从尾到头打印链表</a></h4><pre><code class="hljs go"><span class="hljs-comment">/**</span><span class="hljs-comment"> * Definition for singly-linked list.</span><span class="hljs-comment"> * type ListNode struct &#123;</span><span class="hljs-comment"> *     Val int</span><span class="hljs-comment"> *     Next *ListNode</span><span class="hljs-comment"> * &#125;</span><span class="hljs-comment"> */</span><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">reversePrint</span><span class="hljs-params">(head *ListNode)</span> []<span class="hljs-title">int</span></span> &#123;    <span class="hljs-keyword">var</span> tmp []<span class="hljs-keyword">int</span>    <span class="hljs-keyword">for</span> head != <span class="hljs-literal">nil</span> &#123;        tmp = <span class="hljs-built_in">append</span>(tmp, head.Val)        head = head.Next    &#125;    <span class="hljs-keyword">var</span> res []<span class="hljs-keyword">int</span>    <span class="hljs-keyword">for</span> i := <span class="hljs-built_in">len</span>(tmp) - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i-- &#123;        res = <span class="hljs-built_in">append</span>(res, tmp[i])    &#125;    <span class="hljs-keyword">return</span> res&#125;</code></pre><h4 id="剑指-Offer-07-重建二叉树"><a href="#剑指-Offer-07-重建二叉树" class="headerlink" title="剑指 Offer 07. 重建二叉树"></a><a href="https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/">剑指 Offer 07. 重建二叉树</a></h4><pre><code class="hljs go"><span class="hljs-comment">/**</span><span class="hljs-comment"> * Definition for a binary tree node.</span><span class="hljs-comment"> * type TreeNode struct &#123;</span><span class="hljs-comment"> *     Val int</span><span class="hljs-comment"> *     Left *TreeNode</span><span class="hljs-comment"> *     Right *TreeNode</span><span class="hljs-comment"> * &#125;</span><span class="hljs-comment"> */</span><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">buildTree</span><span class="hljs-params">(preorder []<span class="hljs-keyword">int</span>, inorder []<span class="hljs-keyword">int</span>)</span> *<span class="hljs-title">TreeNode</span></span> &#123;<span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(preorder) == <span class="hljs-number">0</span> || <span class="hljs-built_in">len</span>(inorder) == <span class="hljs-number">0</span> &#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>&#125;res := &amp;TreeNode&#123;Val:   preorder[<span class="hljs-number">0</span>],Left:  buildTree(preorder[<span class="hljs-number">1</span>:find(inorder, preorder[<span class="hljs-number">0</span>])+<span class="hljs-number">1</span>], inorder[:find(inorder, preorder[<span class="hljs-number">0</span>])]),Right: buildTree(preorder[find(inorder, preorder[<span class="hljs-number">0</span>])+<span class="hljs-number">1</span>:], inorder[find(inorder, preorder[<span class="hljs-number">0</span>])+<span class="hljs-number">1</span>:]),&#125;<span class="hljs-keyword">return</span> res&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">find</span><span class="hljs-params">(slice []<span class="hljs-keyword">int</span>, tmp <span class="hljs-keyword">int</span>)</span> <span class="hljs-params">(index <span class="hljs-keyword">int</span>)</span></span> &#123;<span class="hljs-keyword">for</span> i, v := <span class="hljs-keyword">range</span> slice &#123;<span class="hljs-keyword">if</span> v == tmp &#123;index = i<span class="hljs-keyword">break</span>&#125;&#125;<span class="hljs-keyword">return</span> index&#125;</code></pre><h4 id="剑指-Offer-10-I-斐波那契数列"><a href="#剑指-Offer-10-I-斐波那契数列" class="headerlink" title="剑指 Offer 10- I. 斐波那契数列"></a><a href="https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/">剑指 Offer 10- I. 斐波那契数列</a></h4><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">fib</span><span class="hljs-params">(n <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">int</span></span> &#123;<span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span> &#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>&#125;<span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span> &#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&#125;res := <span class="hljs-number">0</span>tmp0 := <span class="hljs-number">0</span>tmp1 := <span class="hljs-number">1</span><span class="hljs-keyword">for</span> i:= <span class="hljs-number">2</span>; i &lt;= n; i++ &#123;res = (tmp1 + tmp0) % <span class="hljs-number">1000000007</span>tmp0 = (tmp1) % <span class="hljs-number">1000000007</span>tmp1 = (res) % <span class="hljs-number">1000000007</span>&#125;<span class="hljs-keyword">return</span> res % <span class="hljs-number">1000000007</span>&#125;</code></pre><h4 id="剑指-Offer-10-II-青蛙跳台阶问题"><a href="#剑指-Offer-10-II-青蛙跳台阶问题" class="headerlink" title="剑指 Offer 10- II. 青蛙跳台阶问题"></a><a href="https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/">剑指 Offer 10- II. 青蛙跳台阶问题</a></h4><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">numWays</span><span class="hljs-params">(n <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">int</span></span> &#123;<span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span> || n ==<span class="hljs-number">1</span> &#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&#125;res := <span class="hljs-number">0</span>tmp0 := <span class="hljs-number">1</span>tmp1 := <span class="hljs-number">1</span><span class="hljs-keyword">for</span> i:= <span class="hljs-number">2</span>; i &lt;=n; i++ &#123;res = (tmp0 + tmp1)%<span class="hljs-number">1000000007</span>    tmp0 = tmp1        tmp1 = res         &#125;    <span class="hljs-keyword">return</span> res%<span class="hljs-number">1000000007</span>&#125;</code></pre><h4 id="剑指-Offer-11-旋转数组的最小数字"><a href="#剑指-Offer-11-旋转数组的最小数字" class="headerlink" title="剑指 Offer 11. 旋转数组的最小数字"></a><a href="https://leetcode-cn.com/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof/">剑指 Offer 11. 旋转数组的最小数字</a></h4><pre><code class="hljs matlab">func minArray(numbers []int) int &#123;res := <span class="hljs-number">0</span><span class="hljs-built_in">i</span> := <span class="hljs-number">0</span><span class="hljs-built_in">j</span> := len(numbers) - <span class="hljs-number">1</span><span class="hljs-keyword">for</span> &#123;<span class="hljs-keyword">if</span> numbers[<span class="hljs-built_in">i</span>] &gt; numbers[<span class="hljs-built_in">j</span>] &#123;<span class="hljs-built_in">i</span>++&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> numbers[<span class="hljs-built_in">i</span>] &lt; numbers[<span class="hljs-built_in">j</span>] &#123;<span class="hljs-built_in">j</span>--&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> numbers[<span class="hljs-built_in">i</span>] == numbers[<span class="hljs-built_in">j</span>] &#123;<span class="hljs-keyword">if</span> <span class="hljs-built_in">i</span> == <span class="hljs-built_in">j</span> &#123;res = numbers[<span class="hljs-built_in">i</span>]<span class="hljs-keyword">break</span>&#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-built_in">i</span>++&#125;&#125;&#125;<span class="hljs-keyword">return</span> res&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>剑指offer</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
